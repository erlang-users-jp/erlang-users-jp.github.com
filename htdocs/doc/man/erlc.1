.TH erlc 1 "erts  5.6.3" "Ericsson AB" "USER COMMANDS"
.SH 名前
erlc \- コンパイラ
.SH 説明
.LP
この \fIerlc\fR プログラムは Erlang システムですべてのコンパイラを実行する共通の方法を提供します\&. 各入力ファイルの拡張次第で, \fIerlc\fR は適切なコンパイラを呼び出します\&. どのコンパイラが使用されるかに関係なく, インクルードパスや出力ディレクトリなどのパラメータが同じフラグで提供されます\&.
.LP

.SH EXPORTS
.LP
.B
erlc flags file1\&.ext file2\&.ext\&.\&.\&.
.br
.RS
.LP
\fIErlc\fR は1つかそれ以上のファイルをコンパイルします\&. そのファイルは拡張子を含まなければなりません, たとえば \fI\&.erl\fR は Erlang のソースコードであり, \fI\&.yrl\fR は Yecc のソースコードです\&. \fIErlc\fR は 適切なコンパイラを呼び出すために拡張子を使用します\&.
.RE
.SH 一般的なフラグ
.LP
以下のフラグがサポートされています:
.RS 2
.TP 4
.B
-I \fIdirectory\fR:
指定したディレクトリのインクルードファイルを検索するように指示します\&. \fI-include\fR や \fI-include_dir\fR ディレクティブに遭遇したとき, コンパイラは以下のディレクトリからヘッダーファイルを検索します:
.RS 4
.LP

.RS 2
.TP 4
1.
\fI"\&."\fR, これはファイルサーバーのカレントディレクトリです;
.TP 4
2.
コンパイルしたファイルの base name(訳注: ベースディレクトリ?)
.TP 4
3.
\fI-I\fR オプションを使用して指定されたディレクトリ\&. 最後に指定されたディレクトリが最初に検索されます\&.
.RE
.RE
.TP 4
.B
-o \fIdirectory\fR:
このディレクトリはコンパイラがファイルを出力すべきディレクトリです\&. もし指定しなかった場合, ファイルはカレントディレクトリに出力されるでしょう\&.
.TP 4
.B
-D\fIname\fR:
マクロの定義\&.
.TP 4
.B
-D\fIname\fR=\fIvalue\fR:
与えられた値と共にマクロを定義します\&. この値はあらゆる Erlang の term から成ります\&. 機種依存により, シェル自身が解釈する特定の文字をクオートする必要があるかもしれません\&. Unix では, タプルやリストを含む terms はクオートされなければ成りません\&. すべてのプラッフォームでスペースを含む terms はクオートされなければ成りません\&.
.TP 4
.B
-W\fInumber\fR:
警告レベルを \fInumber\fR に設定します\&. デフォルトは \fI1\fR です\&. \fI-W0\fR を使用することで警告を切ることが出来ます\&.
.TP 4
.B
-W:
\fI-W1\fR\ と同じです&. デフォルト\&.
.TP 4
.B
-v:
詳細な出力を有効にします\&.
.TP 4
.B
-b \fIoutput-type\fR:
出力ファイルの種類を指定します\&. 一般に \fIoutput-type\fR はピリオドを除いた出力ファイルの拡張子と同じです\&. このオプションはコンパイラが単一の出力フォーマットしか持たない場合は無視されます\&.

.TP 4
.B
-hybrid:
コンパイラは hybrid-heap エミュレータを使用します\&. これは主にネイティブコードをコンパイルする際に役立ちます, このコードは実行するシステムと同じシステムでコンパイルされる必要があります\&.
.TP 4
.B
-smp:
SMP エミュレータを使用してコンパイルします\&. これは主にネイティブコードをコンパイルする際に役立ちます, このコードは実行するシステムと同じシステムでコンパイルされる必要があります\&.
.TP 4
.B
--:
これ以降はオプションが続かないというシグナルです\&. 残りの引数はハイフンから始まったとしてファイル名として扱われるでしょう\&.
.TP 4
.B
+\fIterm\fR:
A flag starting with a plus (\&'\fI+\fR\&') rather than a hyphen will be converted to an Erlang term and passed unchanged to the compiler\&. For instance, the \fIexport_all\fR option for the Erlang compiler can be specified as follows:

.RS 4
.LP


.nf
erlc +export_all file\&.erl
.fi
.LP

.LP
Depending on the platform, the value may need to be quoted if the shell itself interprets certain characters\&. On Unix, terms which contain tuples and list must be quoted\&. Terms which contain spaces must be quoted on all platforms\&.
.RE
.RE
.SH SPECIAL FLAGS
.LP
The flags in this section are useful in special situations such as re-building the OTP system\&.
.RS 2
.TP 4
.B
-pa \fIdirectory\fR:
Appends \fIdirectory\fR to the front of the code path in the invoked Erlang emulator\&. This can be used to invoke another compiler than the default one\&.
.TP 4
.B
-pz \fIdirectory\fR:
Appends \fIdirectory\fR to the code path in the invoked Erlang emulator\&.
.RE
.SH SUPPORTED COMPILERS
.RS 2
.TP 4
.B
\&.erl:
Erlang source code\&. It generates a \fI\&.beam\fR file\&.
.RS 4
.LP

.LP
The options -P, -E, and -S are equivalent to +\&'P\&', +\&'E\&', and +\&'S\&', except that it is not necessary to include the single quotes to protect them from the shell\&.
.LP

.LP
Supported options: -I, -o, -D, -v, -W, -b\&.
.RE
.TP 4
.B
\&.yrl:
Yecc source code\&. It generates an \fI\&.erl\fR file\&.
.RS 4
.LP

.LP
Use the -I option with the name of a file to use that file as a customized prologue file (the \fIincludefile\fR option)\&.
.LP

.LP
Supported options: -o, -v, -I, -W (see above)\&.
.RE
.TP 4
.B
\&.mib:
MIB for SNMP\&. It generates a \fI\&.bin\fR file\&.
.RS 4
.LP

.LP
Supported options: -I, -o, -W\&.
.RE
.TP 4
.B
\&.bin:
A compiled MIB for SNMP\&. It generates a \fI\&.hrl\fR file\&.
.RS 4
.LP

.LP
Supported options: -o, -v\&.
.RE
.TP 4
.B
\&.rel:
Script file\&. It generates a boot file\&.
.RS 4
.LP

.LP
Use the -I to name directories to be searched for application files (equivalent to the \fIpath\fR in the option list for \fIsystools:make_script/2\fR)\&.
.LP

.LP
Supported options: -o\&.
.RE
.TP 4
.B
\&.asn1:
ASN1 file\&.
.RS 4
.LP

.LP
Creates an \fI\&.erl\fR, \fI\&.hrl\fR, and \fI\&.asn1db\fR file from an \fI\&.asn1\fR file\&. Also compiles the \fI\&.erl\fR using the Erlang compiler unless the \fI+noobj\fR options is given\&.
.LP

.LP
Supported options: -I, -o, -b, -W\&.
.RE
.TP 4
.B
\&.idl:
IC file\&.
.RS 4
.LP

.LP
Runs the IDL compiler\&.
.LP

.LP
Supported options: -I, -o\&.
.RE
.RE
.SH ENVIRONMENT VARIABLES
.RS 2
.TP 4
.B
ERLC_EMULATOR:
The command for starting the emulator\&. Default is \fIerl\fR in the same directory as the \fIerlc\fR program itself, or if it doesn\&'t exist, \fIerl\fR in any of the directories given in the \fIPATH\fR environment variable\&.
.RE
.SH SEE ALSO
.LP
erl(1), compile(3), yecc(3), snmp(3)
